name: Rust Build and Release
on:
  push:
    tags:
      - 'v*' # Run workflow on version tags, e.g. v1.0.0
env:
  CARGO_TERM_COLOR: always
  RELEASE_BIN: xloge
permissions:
  contents: write
jobs:
  build:
    name: Build and Release
    strategy:
      matrix:
        include:
          - os: macos-13
            artifact_name: xloge-macos-x64
            asset_name: xloge-macos-x64
          - os: macos-latest
            artifact_name: xloge-macos-arm64
            asset_name: xloge-macos-arm64
            rust_target: aarch64-apple-darwin
    
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: ${{ matrix.rust_target }}
    
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --all-features ${{ matrix.rust_target && format('--target {0}', matrix.rust_target) }}
    
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features ${{ matrix.rust_target && format('--target {0}', matrix.rust_target) }}
    
    - name: Prepare artifact path
      id: artifact-path
      run: |
        if [ "${{ matrix.rust_target }}" != "" ]; then
          echo "path=target/${{ matrix.rust_target }}/release/${{ matrix.artifact_name }}" >> $GITHUB_OUTPUT
        else
          echo "path=target/release/${{ matrix.artifact_name }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ steps.artifact-path.outputs.path }}
        retention-days: 5
    
    # Create GitHub release when a version tag is pushed
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest'
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    
    # Upload release asset for each platform
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ steps.artifact-path.outputs.path }}
